plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.example'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    // AWS Lambda
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.2'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.0'

    // AWS SDK v2 (Async)
    implementation platform("software.amazon.awssdk:bom:2.20.15")
    // AWS SDK v2 for DynamoDB
    implementation 'software.amazon.awssdk:dynamodb:2.20.121'
    // AWS SDK v2 - Netty HTTP Client (Required for DynamoDbAsyncClient)
    implementation 'software.amazon.awssdk:netty-nio-client:2.20.121'

    // Jackson for JSON
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'

    // Lombok (optional)
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    // SLF4J for logging
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'ch.qos.logback:logback-classic:1.4.7'

    // JUnit (optional) for testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
}

shadowJar {
    archiveBaseName.set("java-lambda-kafka-dynamodb")
    archiveVersion.set("")
    archiveClassifier.set("")
    mergeServiceFiles()
}
